plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    id 'nu.studer.jooq' version '6.0.1'
}

def flywayVersion = '8.3.0'
def jooqVersion = '3.15.5'

dependencies {
    implementation project(path: ':networking')
    implementation 'com.google.protobuf:protobuf-java-util:3.11.0'

    // database stuff
    implementation "org.jooq:jooq:${jooqVersion}"
    implementation "org.jooq:jooq-meta:${jooqVersion}"
    jooqGenerator "org.jooq:jooq-meta-extensions:${jooqVersion}"
    implementation "org.jooq:jooq-codegen:${jooqVersion}"

    implementation "org.flywaydb:flyway-core:${flywayVersion}"
    implementation "org.flywaydb:flyway-mysql:${flywayVersion}"

    implementation 'org.mariadb.jdbc:mariadb-java-client:2.6.0'
    jooqGenerator 'org.mariadb.jdbc:mariadb-java-client:2.6.0'
    
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-text:1.4'
    implementation 'com.h2database:h2:1.4.199'
    implementation 'org.apache.commons:commons-math3:3.5'
    
    // YAML
    implementation 'org.yaml:snakeyaml:1.25'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.3'
    
    // web
    implementation 'au.com.codeka:carrot:2.4.2'

    implementation 'com.github.minecraft-saar:shared-resources:8f094826670d367955530c5ba3c4ab299928a9e8'
    implementation group: 'io.github.classgraph', name: 'classgraph', version: '4.8.60'
}


startScripts.enabled = false

mainClassName = "de.saar.minecraft.broker.Broker"


jooq {
    version = jooqVersion
    configurations {
        main {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
            generator {
                name = 'org.jooq.codegen.DefaultGenerator'
                strategy {
                    name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
                generate {
                    javaTimeTypes = true
                }
                database {
                    name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                    properties {
                        property {
                        key = 'scripts'
                            value = 'src/main/resources/db/migration/*.sql'
                        }
                        property {
                            key = 'sort'
                            value = 'flyway'
                        }
                    }
                    forcedTypes {
                        forcedType {
                            userType = 'de.saar.minecraft.broker.db.GameStatus'
                            enumConverter = true
                            includeExpression = '.*games.status'
                        }
                        forcedType {
                            userType = 'de.saar.minecraft.broker.db.GameLogsDirection'
                            enumConverter = true
                            includeExpression = '.*game_logs.direction'
                        }
                    }
                }
                target {
                    packageName = 'de.saar.minecraft.broker.db'
                }
                }
            }
        }
    }
}

// Local Variables:
// groovy-indent-offset: 4
// indent-tabs-mode: nil
// End:
